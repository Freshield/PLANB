
PLANB_IO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000c4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000118  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000058  00000000  00000000  00000148  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000026c  00000000  00000000  000001a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000138  00000000  00000000  0000040c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000177  00000000  00000000  00000544  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  000000b0  00000000  00000000  000006bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000246  00000000  00000000  0000076c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000001a8  00000000  00000000  000009b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000060  00000000  00000000  00000b5a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ec       	ldi	r30, 0xC4	; 196
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 57 00 	call	0xae	; 0xae <main>
  7a:	0c 94 60 00 	jmp	0xc0	; 0xc0 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <_Z12delay_secondi>:

void delay_second(int i) 
{
	
	int j;
	for(;i!=0;i--)
  82:	00 97       	sbiw	r24, 0x00	; 0
  84:	79 f0       	breq	.+30     	; 0xa4 <_Z12delay_secondi+0x22>
		asm volatile ("nop");
	}
}

void delay_second(int i) 
{
  86:	5f ef       	ldi	r21, 0xFF	; 255
  88:	4f ef       	ldi	r20, 0xFF	; 255
  8a:	09 c0       	rjmp	.+18     	; 0x9e <_Z12delay_secondi+0x1c>
  8c:	21 50       	subi	r18, 0x01	; 1
  8e:	31 09       	sbc	r19, r1
	
	int j;
	for(;i!=0;i--)
	{
		for(j=65535;j!=0;j--);
  90:	21 15       	cp	r18, r1
  92:	31 05       	cpc	r19, r1
  94:	d9 f7       	brne	.-10     	; 0x8c <_Z12delay_secondi+0xa>
		{
			asm volatile ("nop");
  96:	00 00       	nop

void delay_second(int i) 
{
	
	int j;
	for(;i!=0;i--)
  98:	01 97       	sbiw	r24, 0x01	; 1
  9a:	00 97       	sbiw	r24, 0x00	; 0
  9c:	19 f0       	breq	.+6      	; 0xa4 <_Z12delay_secondi+0x22>
		asm volatile ("nop");
	}
}

void delay_second(int i) 
{
  9e:	25 2f       	mov	r18, r21
  a0:	34 2f       	mov	r19, r20
  a2:	f4 cf       	rjmp	.-24     	; 0x8c <_Z12delay_secondi+0xa>
  a4:	08 95       	ret

000000a6 <_Z8LED_INITv>:

//************≥ı ºªØ
void LED_INIT()
{
	
	LED_DDR = 0XFF;
  a6:	8f ef       	ldi	r24, 0xFF	; 255
  a8:	8a bb       	out	0x1a, r24	; 26
	
	LED_PORT = 0X00;
  aa:	1b ba       	out	0x1b, r1	; 27
  ac:	08 95       	ret

000000ae <main>:
#include <C:\Users\FRESHIELD\Documents\MEGAsync\EDEN\avr\device\lib_led.h>
   
    
int main(void)     
{        
	LED_INIT();         
  ae:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z8LED_INITv>
	
	LED_PORT = 0X01;
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	8b bb       	out	0x1b, r24	; 27
	 
    while(1)
    {
		delay_second(5);
  b6:	85 e0       	ldi	r24, 0x05	; 5
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	0e 94 41 00 	call	0x82	; 0x82 <_Z12delay_secondi>
  be:	fb cf       	rjmp	.-10     	; 0xb6 <main+0x8>

000000c0 <_exit>:
  c0:	f8 94       	cli

000000c2 <__stop_program>:
  c2:	ff cf       	rjmp	.-2      	; 0xc2 <__stop_program>
