
IR_recever.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  000004c0  00000554  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000015  00800062  00800062  00000556  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000556  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000588  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  000005c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000552  00000000  00000000  0000067c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000169  00000000  00000000  00000bce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000290  00000000  00000000  00000d37  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b8  00000000  00000000  00000fc8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000476  00000000  00000000  00001180  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000252  00000000  00000000  000015f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00001848  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 a1 00 	jmp	0x142	; 0x142 <__vector_5>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ec       	ldi	r30, 0xC0	; 192
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 e6       	ldi	r26, 0x62	; 98
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a7 37       	cpi	r26, 0x77	; 119
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 d6 00 	call	0x1ac	; 0x1ac <main>
  8a:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z12delay_reducel>:
    for(;delay > 1;delay--)
	{
		asm volatile ("nop");
	}
	*/
	while (delay)
  92:	61 15       	cp	r22, r1
  94:	71 05       	cpc	r23, r1
  96:	81 05       	cpc	r24, r1
  98:	91 05       	cpc	r25, r1
  9a:	51 f0       	breq	.+20     	; 0xb0 <_Z12delay_reducel+0x1e>
	{
		delay--;
  9c:	61 50       	subi	r22, 0x01	; 1
  9e:	71 09       	sbc	r23, r1
  a0:	81 09       	sbc	r24, r1
  a2:	91 09       	sbc	r25, r1
		asm volatile ("nop");
  a4:	00 00       	nop
    for(;delay > 1;delay--)
	{
		asm volatile ("nop");
	}
	*/
	while (delay)
  a6:	61 15       	cp	r22, r1
  a8:	71 05       	cpc	r23, r1
  aa:	81 05       	cpc	r24, r1
  ac:	91 05       	cpc	r25, r1
  ae:	b1 f7       	brne	.-20     	; 0x9c <_Z12delay_reducel+0xa>
  b0:	08 95       	ret

000000b2 <_Z12delay_secondi>:

void delay_second(int i) 
{
	
	int j;
	for(;i!=0;i--)
  b2:	00 97       	sbiw	r24, 0x00	; 0
  b4:	41 f4       	brne	.+16     	; 0xc6 <_Z12delay_secondi+0x14>
  b6:	08 95       	ret
  b8:	21 50       	subi	r18, 0x01	; 1
  ba:	31 09       	sbc	r19, r1
	{
		for(j=65535;j!=0;j--);
  bc:	e9 f7       	brne	.-6      	; 0xb8 <_Z12delay_secondi+0x6>
		{
			asm volatile ("nop");
  be:	00 00       	nop

void delay_second(int i) 
{
	
	int j;
	for(;i!=0;i--)
  c0:	01 97       	sbiw	r24, 0x01	; 1
  c2:	19 f4       	brne	.+6      	; 0xca <_Z12delay_secondi+0x18>
  c4:	08 95       	ret
		asm volatile ("nop");
	}
}

void delay_second(int i) 
{
  c6:	5f ef       	ldi	r21, 0xFF	; 255
  c8:	4f ef       	ldi	r20, 0xFF	; 255
  ca:	25 2f       	mov	r18, r21
  cc:	34 2f       	mov	r19, r20
  ce:	f4 cf       	rjmp	.-24     	; 0xb8 <_Z12delay_secondi+0x6>

000000d0 <_Z8LED_INITv>:

//************初始化
void LED_INIT()
{
	
	LED_PORT = 0X00;
  d0:	1b ba       	out	0x1b, r1	; 27
	
	LED_DDR = 0XFF;
  d2:	8f ef       	ldi	r24, 0xFF	; 255
  d4:	8a bb       	out	0x1a, r24	; 26
  d6:	08 95       	ret

000000d8 <_Z16IR_receiver_initv>:
 *使用timer1的icr1捕获
 */

void IR_receiver_init()
{
	IR_receiver_DDR &= ~(1<<IR_receiver_OUT);  IR_sender_PORT |= (1 << IR_sender_OUT);//相应端口设为接收并且置为高电平
  d8:	8e 98       	cbi	0x11, 6	; 17
  da:	c3 9a       	sbi	0x18, 3	; 24
	TIMSK |= (1<<TICIE1);//中断初始化
  dc:	89 b7       	in	r24, 0x39	; 57
  de:	80 62       	ori	r24, 0x20	; 32
  e0:	89 bf       	out	0x39, r24	; 57
	TCCR1B |= (1<<ICNC1)|(1<<CS12);FN_IR = 256;//噪声抑制 下降沿触发 256分频
  e2:	8e b5       	in	r24, 0x2e	; 46
  e4:	84 68       	ori	r24, 0x84	; 132
  e6:	8e bd       	out	0x2e, r24	; 46
  e8:	80 e0       	ldi	r24, 0x00	; 0
  ea:	91 e0       	ldi	r25, 0x01	; 1
  ec:	90 93 61 00 	sts	0x0061, r25
  f0:	80 93 60 00 	sts	0x0060, r24
	TCNT1 = 0x00;//计数器初始化
  f4:	1d bc       	out	0x2d, r1	; 45
  f6:	1c bc       	out	0x2c, r1	; 44
  f8:	08 95       	ret

000000fa <_Z20IR_receiver_model_upv>:
}
//设置为上升沿捕获
void IR_receiver_model_up()
{
	TCCR1B |= (1<<ICES1);
  fa:	8e b5       	in	r24, 0x2e	; 46
  fc:	80 64       	ori	r24, 0x40	; 64
  fe:	8e bd       	out	0x2e, r24	; 46
	TIFR |= (1<<ICF1);
 100:	88 b7       	in	r24, 0x38	; 56
 102:	80 62       	ori	r24, 0x20	; 32
 104:	88 bf       	out	0x38, r24	; 56
 106:	08 95       	ret

00000108 <_Z22IR_receiver_model_downv>:
}
//设置为下降沿捕获
void IR_receiver_model_down()
{
	TCCR1B &= ~(1<<ICES1);
 108:	8e b5       	in	r24, 0x2e	; 46
 10a:	8f 7b       	andi	r24, 0xBF	; 191
 10c:	8e bd       	out	0x2e, r24	; 46
	TIFR |= (1<<ICF1);
 10e:	88 b7       	in	r24, 0x38	; 56
 110:	80 62       	ori	r24, 0x20	; 32
 112:	88 bf       	out	0x38, r24	; 56
 114:	08 95       	ret

00000116 <_Z17IR_receiver_catchv>:
uchar count = 0;


void IR_receiver_catch()
{
	new_num = ICR1;
 116:	86 b5       	in	r24, 0x26	; 38
 118:	97 b5       	in	r25, 0x27	; 39
 11a:	90 93 70 00 	sts	0x0070, r25
 11e:	80 93 6f 00 	sts	0x006F, r24
	change_num = new_num - old_num;
 122:	20 91 71 00 	lds	r18, 0x0071
 126:	30 91 72 00 	lds	r19, 0x0072
 12a:	ac 01       	movw	r20, r24
 12c:	42 1b       	sub	r20, r18
 12e:	53 0b       	sbc	r21, r19
 130:	50 93 6e 00 	sts	0x006E, r21
 134:	40 93 6d 00 	sts	0x006D, r20
	old_num = new_num;
 138:	90 93 72 00 	sts	0x0072, r25
 13c:	80 93 71 00 	sts	0x0071, r24
 140:	08 95       	ret

00000142 <__vector_5>:
}

ISR(TIMER1_CAPT_vect)
{
 142:	1f 92       	push	r1
 144:	0f 92       	push	r0
 146:	0f b6       	in	r0, 0x3f	; 63
 148:	0f 92       	push	r0
 14a:	11 24       	eor	r1, r1
 14c:	2f 93       	push	r18
 14e:	3f 93       	push	r19
 150:	4f 93       	push	r20
 152:	5f 93       	push	r21
 154:	6f 93       	push	r22
 156:	7f 93       	push	r23
 158:	8f 93       	push	r24
 15a:	9f 93       	push	r25
 15c:	af 93       	push	r26
 15e:	bf 93       	push	r27
 160:	ef 93       	push	r30
 162:	ff 93       	push	r31
	IR_receiver_catch();
 164:	0e 94 8b 00 	call	0x116	; 0x116 <_Z17IR_receiver_catchv>
	if (model == 0)
 168:	80 91 76 00 	lds	r24, 0x0076
 16c:	81 11       	cpse	r24, r1
 16e:	06 c0       	rjmp	.+12     	; 0x17c <__vector_5+0x3a>
	{
		
		model = 1;
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	80 93 76 00 	sts	0x0076, r24
		IR_receiver_model_up();
 176:	0e 94 7d 00 	call	0xfa	; 0xfa <_Z20IR_receiver_model_upv>
 17a:	04 c0       	rjmp	.+8      	; 0x184 <__vector_5+0x42>
	} 
	else
	{
		model = 0;
 17c:	10 92 76 00 	sts	0x0076, r1
		IR_receiver_model_down();
 180:	0e 94 84 00 	call	0x108	; 0x108 <_Z22IR_receiver_model_downv>
	}
	figure = 1;
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	80 93 75 00 	sts	0x0075, r24
}
 18a:	ff 91       	pop	r31
 18c:	ef 91       	pop	r30
 18e:	bf 91       	pop	r27
 190:	af 91       	pop	r26
 192:	9f 91       	pop	r25
 194:	8f 91       	pop	r24
 196:	7f 91       	pop	r23
 198:	6f 91       	pop	r22
 19a:	5f 91       	pop	r21
 19c:	4f 91       	pop	r20
 19e:	3f 91       	pop	r19
 1a0:	2f 91       	pop	r18
 1a2:	0f 90       	pop	r0
 1a4:	0f be       	out	0x3f, r0	; 63
 1a6:	0f 90       	pop	r0
 1a8:	1f 90       	pop	r1
 1aa:	18 95       	reti

000001ac <main>:



int main(void)
{
	LED_INIT();
 1ac:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z8LED_INITv>
	
	LED_PORT = 0x00;
 1b0:	1b ba       	out	0x1b, r1	; 27
	
	IR_receiver_init();
 1b2:	0e 94 6c 00 	call	0xd8	; 0xd8 <_Z16IR_receiver_initv>
	
	sei();
 1b6:	78 94       	sei
		   
	   }
	   if (lister == 6)
	   {
		   delay_second(15);
		   LED_PORT = buffer[1];
 1b8:	c3 e6       	ldi	r28, 0x63	; 99
 1ba:	d0 e0       	ldi	r29, 0x00	; 0
	
	sei();
	
    while(1)
    {
	   if (figure == 0)
 1bc:	80 91 75 00 	lds	r24, 0x0075
 1c0:	81 11       	cpse	r24, r1
 1c2:	07 c0       	rjmp	.+14     	; 0x1d2 <main+0x26>
	   {
		   delay_reduce(1);
 1c4:	61 e0       	ldi	r22, 0x01	; 1
 1c6:	70 e0       	ldi	r23, 0x00	; 0
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	0e 94 49 00 	call	0x92	; 0x92 <_Z12delay_reducel>
 1d0:	23 c0       	rjmp	.+70     	; 0x218 <main+0x6c>
	   }
	   else
	   {
		   
		   figure = 0;
 1d2:	10 92 75 00 	sts	0x0075, r1
		   lister++;
 1d6:	80 91 73 00 	lds	r24, 0x0073
 1da:	8f 5f       	subi	r24, 0xFF	; 255
 1dc:	80 93 73 00 	sts	0x0073, r24
		   time = change_num/28.8;
 1e0:	60 91 6d 00 	lds	r22, 0x006D
 1e4:	70 91 6e 00 	lds	r23, 0x006E
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__floatunsisf>
 1f0:	26 e6       	ldi	r18, 0x66	; 102
 1f2:	36 e6       	ldi	r19, 0x66	; 102
 1f4:	46 ee       	ldi	r20, 0xE6	; 230
 1f6:	51 e4       	ldi	r21, 0x41	; 65
 1f8:	0e 94 2f 01 	call	0x25e	; 0x25e <__divsf3>
 1fc:	0e 94 a1 01 	call	0x342	; 0x342 <__fixunssfsi>
 200:	60 93 74 00 	sts	0x0074, r22
		   buffer[count] = time;
 204:	80 91 62 00 	lds	r24, 0x0062
 208:	e8 2f       	mov	r30, r24
 20a:	f0 e0       	ldi	r31, 0x00	; 0
 20c:	ed 59       	subi	r30, 0x9D	; 157
 20e:	ff 4f       	sbci	r31, 0xFF	; 255
 210:	60 83       	st	Z, r22
		   count ++;
 212:	8f 5f       	subi	r24, 0xFF	; 255
 214:	80 93 62 00 	sts	0x0062, r24
		   
	   }
	   if (lister == 6)
 218:	80 91 73 00 	lds	r24, 0x0073
 21c:	86 30       	cpi	r24, 0x06	; 6
 21e:	71 f6       	brne	.-100    	; 0x1bc <main+0x10>
	   {
		   delay_second(15);
 220:	8f e0       	ldi	r24, 0x0F	; 15
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	0e 94 59 00 	call	0xb2	; 0xb2 <_Z12delay_secondi>
		   LED_PORT = buffer[1];
 228:	89 81       	ldd	r24, Y+1	; 0x01
 22a:	8b bb       	out	0x1b, r24	; 27
		   delay_second(15);
 22c:	8f e0       	ldi	r24, 0x0F	; 15
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	0e 94 59 00 	call	0xb2	; 0xb2 <_Z12delay_secondi>
		   LED_PORT = buffer[2];
 234:	8a 81       	ldd	r24, Y+2	; 0x02
 236:	8b bb       	out	0x1b, r24	; 27
		   delay_second(15); 
 238:	8f e0       	ldi	r24, 0x0F	; 15
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	0e 94 59 00 	call	0xb2	; 0xb2 <_Z12delay_secondi>
		   LED_PORT = buffer[3];
 240:	8b 81       	ldd	r24, Y+3	; 0x03
 242:	8b bb       	out	0x1b, r24	; 27
		   delay_second(15);
 244:	8f e0       	ldi	r24, 0x0F	; 15
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	0e 94 59 00 	call	0xb2	; 0xb2 <_Z12delay_secondi>
		   LED_PORT = buffer[4];
 24c:	8c 81       	ldd	r24, Y+4	; 0x04
 24e:	8b bb       	out	0x1b, r24	; 27
		   delay_second(15);
 250:	8f e0       	ldi	r24, 0x0F	; 15
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	0e 94 59 00 	call	0xb2	; 0xb2 <_Z12delay_secondi>
		   LED_PORT = buffer[5];
 258:	8d 81       	ldd	r24, Y+5	; 0x05
 25a:	8b bb       	out	0x1b, r24	; 27
 25c:	af cf       	rjmp	.-162    	; 0x1bc <main+0x10>

0000025e <__divsf3>:
 25e:	0e 94 43 01 	call	0x286	; 0x286 <__divsf3x>
 262:	0c 94 24 02 	jmp	0x448	; 0x448 <__fp_round>
 266:	0e 94 1d 02 	call	0x43a	; 0x43a <__fp_pscB>
 26a:	58 f0       	brcs	.+22     	; 0x282 <__divsf3+0x24>
 26c:	0e 94 16 02 	call	0x42c	; 0x42c <__fp_pscA>
 270:	40 f0       	brcs	.+16     	; 0x282 <__divsf3+0x24>
 272:	29 f4       	brne	.+10     	; 0x27e <__divsf3+0x20>
 274:	5f 3f       	cpi	r21, 0xFF	; 255
 276:	29 f0       	breq	.+10     	; 0x282 <__divsf3+0x24>
 278:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__fp_inf>
 27c:	51 11       	cpse	r21, r1
 27e:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__fp_szero>
 282:	0c 94 13 02 	jmp	0x426	; 0x426 <__fp_nan>

00000286 <__divsf3x>:
 286:	0e 94 35 02 	call	0x46a	; 0x46a <__fp_split3>
 28a:	68 f3       	brcs	.-38     	; 0x266 <__divsf3+0x8>

0000028c <__divsf3_pse>:
 28c:	99 23       	and	r25, r25
 28e:	b1 f3       	breq	.-20     	; 0x27c <__divsf3+0x1e>
 290:	55 23       	and	r21, r21
 292:	91 f3       	breq	.-28     	; 0x278 <__divsf3+0x1a>
 294:	95 1b       	sub	r25, r21
 296:	55 0b       	sbc	r21, r21
 298:	bb 27       	eor	r27, r27
 29a:	aa 27       	eor	r26, r26
 29c:	62 17       	cp	r22, r18
 29e:	73 07       	cpc	r23, r19
 2a0:	84 07       	cpc	r24, r20
 2a2:	38 f0       	brcs	.+14     	; 0x2b2 <__divsf3_pse+0x26>
 2a4:	9f 5f       	subi	r25, 0xFF	; 255
 2a6:	5f 4f       	sbci	r21, 0xFF	; 255
 2a8:	22 0f       	add	r18, r18
 2aa:	33 1f       	adc	r19, r19
 2ac:	44 1f       	adc	r20, r20
 2ae:	aa 1f       	adc	r26, r26
 2b0:	a9 f3       	breq	.-22     	; 0x29c <__divsf3_pse+0x10>
 2b2:	35 d0       	rcall	.+106    	; 0x31e <__divsf3_pse+0x92>
 2b4:	0e 2e       	mov	r0, r30
 2b6:	3a f0       	brmi	.+14     	; 0x2c6 <__divsf3_pse+0x3a>
 2b8:	e0 e8       	ldi	r30, 0x80	; 128
 2ba:	32 d0       	rcall	.+100    	; 0x320 <__divsf3_pse+0x94>
 2bc:	91 50       	subi	r25, 0x01	; 1
 2be:	50 40       	sbci	r21, 0x00	; 0
 2c0:	e6 95       	lsr	r30
 2c2:	00 1c       	adc	r0, r0
 2c4:	ca f7       	brpl	.-14     	; 0x2b8 <__divsf3_pse+0x2c>
 2c6:	2b d0       	rcall	.+86     	; 0x31e <__divsf3_pse+0x92>
 2c8:	fe 2f       	mov	r31, r30
 2ca:	29 d0       	rcall	.+82     	; 0x31e <__divsf3_pse+0x92>
 2cc:	66 0f       	add	r22, r22
 2ce:	77 1f       	adc	r23, r23
 2d0:	88 1f       	adc	r24, r24
 2d2:	bb 1f       	adc	r27, r27
 2d4:	26 17       	cp	r18, r22
 2d6:	37 07       	cpc	r19, r23
 2d8:	48 07       	cpc	r20, r24
 2da:	ab 07       	cpc	r26, r27
 2dc:	b0 e8       	ldi	r27, 0x80	; 128
 2de:	09 f0       	breq	.+2      	; 0x2e2 <__divsf3_pse+0x56>
 2e0:	bb 0b       	sbc	r27, r27
 2e2:	80 2d       	mov	r24, r0
 2e4:	bf 01       	movw	r22, r30
 2e6:	ff 27       	eor	r31, r31
 2e8:	93 58       	subi	r25, 0x83	; 131
 2ea:	5f 4f       	sbci	r21, 0xFF	; 255
 2ec:	3a f0       	brmi	.+14     	; 0x2fc <__divsf3_pse+0x70>
 2ee:	9e 3f       	cpi	r25, 0xFE	; 254
 2f0:	51 05       	cpc	r21, r1
 2f2:	78 f0       	brcs	.+30     	; 0x312 <__divsf3_pse+0x86>
 2f4:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__fp_inf>
 2f8:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__fp_szero>
 2fc:	5f 3f       	cpi	r21, 0xFF	; 255
 2fe:	e4 f3       	brlt	.-8      	; 0x2f8 <__divsf3_pse+0x6c>
 300:	98 3e       	cpi	r25, 0xE8	; 232
 302:	d4 f3       	brlt	.-12     	; 0x2f8 <__divsf3_pse+0x6c>
 304:	86 95       	lsr	r24
 306:	77 95       	ror	r23
 308:	67 95       	ror	r22
 30a:	b7 95       	ror	r27
 30c:	f7 95       	ror	r31
 30e:	9f 5f       	subi	r25, 0xFF	; 255
 310:	c9 f7       	brne	.-14     	; 0x304 <__divsf3_pse+0x78>
 312:	88 0f       	add	r24, r24
 314:	91 1d       	adc	r25, r1
 316:	96 95       	lsr	r25
 318:	87 95       	ror	r24
 31a:	97 f9       	bld	r25, 7
 31c:	08 95       	ret
 31e:	e1 e0       	ldi	r30, 0x01	; 1
 320:	66 0f       	add	r22, r22
 322:	77 1f       	adc	r23, r23
 324:	88 1f       	adc	r24, r24
 326:	bb 1f       	adc	r27, r27
 328:	62 17       	cp	r22, r18
 32a:	73 07       	cpc	r23, r19
 32c:	84 07       	cpc	r24, r20
 32e:	ba 07       	cpc	r27, r26
 330:	20 f0       	brcs	.+8      	; 0x33a <__divsf3_pse+0xae>
 332:	62 1b       	sub	r22, r18
 334:	73 0b       	sbc	r23, r19
 336:	84 0b       	sbc	r24, r20
 338:	ba 0b       	sbc	r27, r26
 33a:	ee 1f       	adc	r30, r30
 33c:	88 f7       	brcc	.-30     	; 0x320 <__divsf3_pse+0x94>
 33e:	e0 95       	com	r30
 340:	08 95       	ret

00000342 <__fixunssfsi>:
 342:	0e 94 3d 02 	call	0x47a	; 0x47a <__fp_splitA>
 346:	88 f0       	brcs	.+34     	; 0x36a <__fixunssfsi+0x28>
 348:	9f 57       	subi	r25, 0x7F	; 127
 34a:	98 f0       	brcs	.+38     	; 0x372 <__fixunssfsi+0x30>
 34c:	b9 2f       	mov	r27, r25
 34e:	99 27       	eor	r25, r25
 350:	b7 51       	subi	r27, 0x17	; 23
 352:	b0 f0       	brcs	.+44     	; 0x380 <__fixunssfsi+0x3e>
 354:	e1 f0       	breq	.+56     	; 0x38e <__fixunssfsi+0x4c>
 356:	66 0f       	add	r22, r22
 358:	77 1f       	adc	r23, r23
 35a:	88 1f       	adc	r24, r24
 35c:	99 1f       	adc	r25, r25
 35e:	1a f0       	brmi	.+6      	; 0x366 <__fixunssfsi+0x24>
 360:	ba 95       	dec	r27
 362:	c9 f7       	brne	.-14     	; 0x356 <__fixunssfsi+0x14>
 364:	14 c0       	rjmp	.+40     	; 0x38e <__fixunssfsi+0x4c>
 366:	b1 30       	cpi	r27, 0x01	; 1
 368:	91 f0       	breq	.+36     	; 0x38e <__fixunssfsi+0x4c>
 36a:	0e 94 57 02 	call	0x4ae	; 0x4ae <__fp_zero>
 36e:	b1 e0       	ldi	r27, 0x01	; 1
 370:	08 95       	ret
 372:	0c 94 57 02 	jmp	0x4ae	; 0x4ae <__fp_zero>
 376:	67 2f       	mov	r22, r23
 378:	78 2f       	mov	r23, r24
 37a:	88 27       	eor	r24, r24
 37c:	b8 5f       	subi	r27, 0xF8	; 248
 37e:	39 f0       	breq	.+14     	; 0x38e <__fixunssfsi+0x4c>
 380:	b9 3f       	cpi	r27, 0xF9	; 249
 382:	cc f3       	brlt	.-14     	; 0x376 <__fixunssfsi+0x34>
 384:	86 95       	lsr	r24
 386:	77 95       	ror	r23
 388:	67 95       	ror	r22
 38a:	b3 95       	inc	r27
 38c:	d9 f7       	brne	.-10     	; 0x384 <__fixunssfsi+0x42>
 38e:	3e f4       	brtc	.+14     	; 0x39e <__fixunssfsi+0x5c>
 390:	90 95       	com	r25
 392:	80 95       	com	r24
 394:	70 95       	com	r23
 396:	61 95       	neg	r22
 398:	7f 4f       	sbci	r23, 0xFF	; 255
 39a:	8f 4f       	sbci	r24, 0xFF	; 255
 39c:	9f 4f       	sbci	r25, 0xFF	; 255
 39e:	08 95       	ret

000003a0 <__floatunsisf>:
 3a0:	e8 94       	clt
 3a2:	09 c0       	rjmp	.+18     	; 0x3b6 <__floatsisf+0x12>

000003a4 <__floatsisf>:
 3a4:	97 fb       	bst	r25, 7
 3a6:	3e f4       	brtc	.+14     	; 0x3b6 <__floatsisf+0x12>
 3a8:	90 95       	com	r25
 3aa:	80 95       	com	r24
 3ac:	70 95       	com	r23
 3ae:	61 95       	neg	r22
 3b0:	7f 4f       	sbci	r23, 0xFF	; 255
 3b2:	8f 4f       	sbci	r24, 0xFF	; 255
 3b4:	9f 4f       	sbci	r25, 0xFF	; 255
 3b6:	99 23       	and	r25, r25
 3b8:	a9 f0       	breq	.+42     	; 0x3e4 <__floatsisf+0x40>
 3ba:	f9 2f       	mov	r31, r25
 3bc:	96 e9       	ldi	r25, 0x96	; 150
 3be:	bb 27       	eor	r27, r27
 3c0:	93 95       	inc	r25
 3c2:	f6 95       	lsr	r31
 3c4:	87 95       	ror	r24
 3c6:	77 95       	ror	r23
 3c8:	67 95       	ror	r22
 3ca:	b7 95       	ror	r27
 3cc:	f1 11       	cpse	r31, r1
 3ce:	f8 cf       	rjmp	.-16     	; 0x3c0 <__floatsisf+0x1c>
 3d0:	fa f4       	brpl	.+62     	; 0x410 <__floatsisf+0x6c>
 3d2:	bb 0f       	add	r27, r27
 3d4:	11 f4       	brne	.+4      	; 0x3da <__floatsisf+0x36>
 3d6:	60 ff       	sbrs	r22, 0
 3d8:	1b c0       	rjmp	.+54     	; 0x410 <__floatsisf+0x6c>
 3da:	6f 5f       	subi	r22, 0xFF	; 255
 3dc:	7f 4f       	sbci	r23, 0xFF	; 255
 3de:	8f 4f       	sbci	r24, 0xFF	; 255
 3e0:	9f 4f       	sbci	r25, 0xFF	; 255
 3e2:	16 c0       	rjmp	.+44     	; 0x410 <__floatsisf+0x6c>
 3e4:	88 23       	and	r24, r24
 3e6:	11 f0       	breq	.+4      	; 0x3ec <__floatsisf+0x48>
 3e8:	96 e9       	ldi	r25, 0x96	; 150
 3ea:	11 c0       	rjmp	.+34     	; 0x40e <__floatsisf+0x6a>
 3ec:	77 23       	and	r23, r23
 3ee:	21 f0       	breq	.+8      	; 0x3f8 <__floatsisf+0x54>
 3f0:	9e e8       	ldi	r25, 0x8E	; 142
 3f2:	87 2f       	mov	r24, r23
 3f4:	76 2f       	mov	r23, r22
 3f6:	05 c0       	rjmp	.+10     	; 0x402 <__floatsisf+0x5e>
 3f8:	66 23       	and	r22, r22
 3fa:	71 f0       	breq	.+28     	; 0x418 <__floatsisf+0x74>
 3fc:	96 e8       	ldi	r25, 0x86	; 134
 3fe:	86 2f       	mov	r24, r22
 400:	70 e0       	ldi	r23, 0x00	; 0
 402:	60 e0       	ldi	r22, 0x00	; 0
 404:	2a f0       	brmi	.+10     	; 0x410 <__floatsisf+0x6c>
 406:	9a 95       	dec	r25
 408:	66 0f       	add	r22, r22
 40a:	77 1f       	adc	r23, r23
 40c:	88 1f       	adc	r24, r24
 40e:	da f7       	brpl	.-10     	; 0x406 <__floatsisf+0x62>
 410:	88 0f       	add	r24, r24
 412:	96 95       	lsr	r25
 414:	87 95       	ror	r24
 416:	97 f9       	bld	r25, 7
 418:	08 95       	ret

0000041a <__fp_inf>:
 41a:	97 f9       	bld	r25, 7
 41c:	9f 67       	ori	r25, 0x7F	; 127
 41e:	80 e8       	ldi	r24, 0x80	; 128
 420:	70 e0       	ldi	r23, 0x00	; 0
 422:	60 e0       	ldi	r22, 0x00	; 0
 424:	08 95       	ret

00000426 <__fp_nan>:
 426:	9f ef       	ldi	r25, 0xFF	; 255
 428:	80 ec       	ldi	r24, 0xC0	; 192
 42a:	08 95       	ret

0000042c <__fp_pscA>:
 42c:	00 24       	eor	r0, r0
 42e:	0a 94       	dec	r0
 430:	16 16       	cp	r1, r22
 432:	17 06       	cpc	r1, r23
 434:	18 06       	cpc	r1, r24
 436:	09 06       	cpc	r0, r25
 438:	08 95       	ret

0000043a <__fp_pscB>:
 43a:	00 24       	eor	r0, r0
 43c:	0a 94       	dec	r0
 43e:	12 16       	cp	r1, r18
 440:	13 06       	cpc	r1, r19
 442:	14 06       	cpc	r1, r20
 444:	05 06       	cpc	r0, r21
 446:	08 95       	ret

00000448 <__fp_round>:
 448:	09 2e       	mov	r0, r25
 44a:	03 94       	inc	r0
 44c:	00 0c       	add	r0, r0
 44e:	11 f4       	brne	.+4      	; 0x454 <__fp_round+0xc>
 450:	88 23       	and	r24, r24
 452:	52 f0       	brmi	.+20     	; 0x468 <__stack+0x9>
 454:	bb 0f       	add	r27, r27
 456:	40 f4       	brcc	.+16     	; 0x468 <__stack+0x9>
 458:	bf 2b       	or	r27, r31
 45a:	11 f4       	brne	.+4      	; 0x460 <__stack+0x1>
 45c:	60 ff       	sbrs	r22, 0
 45e:	04 c0       	rjmp	.+8      	; 0x468 <__stack+0x9>
 460:	6f 5f       	subi	r22, 0xFF	; 255
 462:	7f 4f       	sbci	r23, 0xFF	; 255
 464:	8f 4f       	sbci	r24, 0xFF	; 255
 466:	9f 4f       	sbci	r25, 0xFF	; 255
 468:	08 95       	ret

0000046a <__fp_split3>:
 46a:	57 fd       	sbrc	r21, 7
 46c:	90 58       	subi	r25, 0x80	; 128
 46e:	44 0f       	add	r20, r20
 470:	55 1f       	adc	r21, r21
 472:	59 f0       	breq	.+22     	; 0x48a <__fp_splitA+0x10>
 474:	5f 3f       	cpi	r21, 0xFF	; 255
 476:	71 f0       	breq	.+28     	; 0x494 <__fp_splitA+0x1a>
 478:	47 95       	ror	r20

0000047a <__fp_splitA>:
 47a:	88 0f       	add	r24, r24
 47c:	97 fb       	bst	r25, 7
 47e:	99 1f       	adc	r25, r25
 480:	61 f0       	breq	.+24     	; 0x49a <__fp_splitA+0x20>
 482:	9f 3f       	cpi	r25, 0xFF	; 255
 484:	79 f0       	breq	.+30     	; 0x4a4 <__fp_splitA+0x2a>
 486:	87 95       	ror	r24
 488:	08 95       	ret
 48a:	12 16       	cp	r1, r18
 48c:	13 06       	cpc	r1, r19
 48e:	14 06       	cpc	r1, r20
 490:	55 1f       	adc	r21, r21
 492:	f2 cf       	rjmp	.-28     	; 0x478 <__fp_split3+0xe>
 494:	46 95       	lsr	r20
 496:	f1 df       	rcall	.-30     	; 0x47a <__fp_splitA>
 498:	08 c0       	rjmp	.+16     	; 0x4aa <__fp_splitA+0x30>
 49a:	16 16       	cp	r1, r22
 49c:	17 06       	cpc	r1, r23
 49e:	18 06       	cpc	r1, r24
 4a0:	99 1f       	adc	r25, r25
 4a2:	f1 cf       	rjmp	.-30     	; 0x486 <__fp_splitA+0xc>
 4a4:	86 95       	lsr	r24
 4a6:	71 05       	cpc	r23, r1
 4a8:	61 05       	cpc	r22, r1
 4aa:	08 94       	sec
 4ac:	08 95       	ret

000004ae <__fp_zero>:
 4ae:	e8 94       	clt

000004b0 <__fp_szero>:
 4b0:	bb 27       	eor	r27, r27
 4b2:	66 27       	eor	r22, r22
 4b4:	77 27       	eor	r23, r23
 4b6:	cb 01       	movw	r24, r22
 4b8:	97 f9       	bld	r25, 7
 4ba:	08 95       	ret

000004bc <_exit>:
 4bc:	f8 94       	cli

000004be <__stop_program>:
 4be:	ff cf       	rjmp	.-2      	; 0x4be <__stop_program>
